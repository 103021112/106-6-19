import java.awt.*;
import java.awt.*;

import javax.swing.JFrame;
import java.awt.*;

import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

import java.awt.Rectangle;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class Main extends JFrame {

	int score1;
	int score2;
	int s1;
	int s2;
	String winner ;
	String a = JOptionPane.showInputDialog("請輸入玩家1名稱");
	String b = JOptionPane.showInputDialog("請輸入玩家2名稱");

	int screen = 1;
	int OverGameScore = 5;

	Image net1image;
	Image net2image;

	Rectangle startBottom = new Rectangle(280, 250, 200, 100);
	Rectangle SetOverScore = new Rectangle(280, 400, 200, 100);
	Rectangle ScoreBord = new Rectangle(280, 550, 200, 100);
	Rectangle explanation = new Rectangle(280, 680, 200, 50);

	Rectangle net1 = new Rectangle(280, 86, 180, 50); // 畫出P1長方體
	Rectangle net2 = new Rectangle(280, 689, 180, 50); // 畫出P2長方體

	static Ball ball = new Ball();
	static P1 p1 = new P1();
	static P2 p2 = new P2();

	public Main() {
		ImageIcon net = new ImageIcon("");
		net1image = net.getImage();
		net2image = net.getImage();
		setTitle("遊戲視窗");
		setSize(750, 750);
		setResizable(false);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setVisible(true);
		setBackground(Color.white);
		addKeyListener(new KeyHandler());
		addKeyListener(new KeyHandler2());
		addMouseListener(new MouseHandler());

	}

	public void start() {
		screen = 2;
		score1 = 0;
		score2 = 0;
	}

	public void score() {
		if (ball.ball.intersects(net1)) {
			score1++;
		}
		if (ball.ball.intersects(net2)) {
			score2++;
		}
	}

	public class KeyHandler extends KeyAdapter {
		public void keyPressed(KeyEvent e) {
			if (screen == 2)
				p1.keyPressed(e);

			if (screen == 1) {
				if (e.getKeyCode() == e.VK_UP) {
					OverGameScore++;
				}
				if (e.getKeyCode() == e.VK_DOWN) {
					OverGameScore--;
				}
				if (OverGameScore <= 0) {
					JOptionPane.showMessageDialog(null, "請調整為大於0的值", "跳出視窗內容",
							JOptionPane.INFORMATION_MESSAGE);
				}
			}

			if (screen == 3 || screen == 4) {
				if (e.getKeyCode() == e.VK_SPACE) {
					screen = 2;
				}
				if (e.getKeyCode() == e.VK_ESCAPE) {
					screen = 1;
				}
			}
			if (screen == 5 || screen == 6) {
				if (e.getKeyCode() == e.VK_ESCAPE) {
					screen = 1;
				}
			}
		}

		public void keyReleased(KeyEvent e) {
			if (screen == 2)
				p1.keyReleased(e);
		}
	}

	public class KeyHandler2 extends KeyAdapter {
		public void keyPressed(KeyEvent e) {
			p2.keyPressed(e);
		}

		public void keyReleased(KeyEvent e) {
			p2.keyReleased(e);
		}
	}

	public class MouseHandler extends MouseAdapter {
		public void mousePressed(MouseEvent e) {
			int x = e.getX();
			int y = e.getY();

			if (screen == 1) {
				if (x > startBottom.x && x < startBottom.x + startBottom.width
						&& y > startBottom.y
						&& y < startBottom.y + startBottom.height)
					start();
				if (x > explanation.x && x < explanation.x + explanation.width
						&& y > explanation.y
						&& y < explanation.y + explanation.height)
					screen = 5;
				if (x > ScoreBord.x && x < ScoreBord.x + ScoreBord.width
						&& y > ScoreBord.y
						&& y < ScoreBord.y + ScoreBord.height)
					screen = 6;
			}
		}
	}

	int i = Integer.parseInt(a);
	int x = Integer.parseInt(b);

	public void collision() {
		if (ball.ball.intersects(p1.P1)) {
			ball.YD(-1);
			ball.x--;
			ball.speed -= 2;
			if (ball.speed < 2)
				ball.speed = 2;
		}
		if (ball.ball.intersects(p2.P2)) {
			ball.YD(+1);
			ball.x++;
			ball.speed -= 2;
			if (ball.speed < 2)
				ball.speed = 2;
		}
	}

	public void paint(Graphics g) {
		Image doubleBufferImage;
		Graphics doubleBufferGraphics;

		doubleBufferImage = createImage(getWidth(), getHeight());
		doubleBufferGraphics = doubleBufferImage.getGraphics();
		paintComponent(doubleBufferGraphics);
		g.drawImage(doubleBufferImage, 0, 0, this);
	}

	public void paintComponent(Graphics g) {
		if (screen == 1) {
			if (score1 >= 1)
				score1 = 0;
			if (score2 >= 1)
				score2 = 0;
			g.setFont(new Font("Arial", Font.BOLD, 70));
			g.drawString("GAME", 270, 150);

			g.setColor(Color.BLUE);
			g.fillRect(startBottom.x, startBottom.y, startBottom.width,
					startBottom.height);
			g.setFont(new Font("Arial", Font.BOLD, 30));
			g.setColor(Color.WHITE);
			g.drawString("   START", startBottom.x + 20, startBottom.y + 60);

			g.setColor(Color.RED);
			g.fillRect(SetOverScore.x, SetOverScore.y, SetOverScore.width,
					SetOverScore.height);
			g.setFont(new Font("Arial", Font.BOLD, 21));
			g.setColor(Color.WHITE);
			g.drawString("Set Over Score  :" + OverGameScore,
					SetOverScore.x + 5, SetOverScore.y + 60);

			g.setColor(Color.WHITE);
			g.fillRect(explanation.x, explanation.y, explanation.width,
					explanation.height);
			g.setFont(new Font("Arial", Font.BOLD, 25));
			g.setColor(Color.GREEN);
			g.drawString("Control Instructions", explanation.x - 15,
					explanation.y + 30);

			g.setColor(Color.BLACK);
			g.fillRect(ScoreBord.x, ScoreBord.y, ScoreBord.width,
					ScoreBord.height);
			g.setFont(new Font("Arial", Font.BOLD, 30));
			g.setColor(Color.GREEN);
			g.drawString("History score", ScoreBord.x + 10, ScoreBord.y + 60);

		}

		if (screen == 2) {
			Graphics2D g2d = (Graphics2D) g;

			BasicStroke stroke = new BasicStroke(2.0f);
			g2d.setStroke(stroke);

			g.drawRect(170, 130, 400, 560); // 桌子長方體

			g.drawRect(net1.x, net1.y, net1.width, net1.height); // p1長方體
			g.drawRect(net2.x, net2.y, net2.width, net2.height); // p2長方體
			g.drawImage(net1image, 280, 86, this);
			g.drawString(a + "得分 " + score1, 200, 650);
			g.drawString(b + "得分" + score2, 490, 170);

			BasicStroke stroke2 = new BasicStroke(2.0f);
			g2d.setStroke(stroke2);

			g.drawOval(270, 300, 200, 200); // 畫出橢圓形
			g.fillRect(169, 395, 403, 2); // 畫出填滿顏色的長方形

			if (score1 >= OverGameScore) {
				screen = 3;
				s1 = score1;
				s2 = score2;

				score1 = 0;
				score2 = 0;
			}

			if (score2 >= OverGameScore) {
				screen = 4;
				s1 = score1;
				s2 = score2;

				score1 = 0;
				score2 = 0;
			}

			ball.draw(g);
			p1.draw(g);
			p2.draw(g);

			score();
			collision();

		}

		if (screen == 3) {
			setBackground(Color.MAGENTA);
			g.setFont(new Font("Arial", Font.BOLD, 40));
			g.drawString(a + " win!", 260, 100);
			g.drawString("press 'SPACE' to continue", 80, 300);
			g.drawString("press 'ESC' to menu", 80, 600);
			winner = a;
			
		}
		if (screen == 4) {
			setBackground(Color.ORANGE);
			g.setFont(new Font("Arial", Font.BOLD, 40));
			g.drawString(b + " win!", 260, 100);
			g.drawString("press 'SPACE' to continue", 100, 300);
			g.drawString("press '  ESC '   to  the menu", 100, 600);
			winner = b;
		}
		if (screen == 5) {
			setBackground(Color.pink);
			g.setFont(new Font("Arial", Font.BOLD, 30));
			g.drawString("Player 1 controls with 'left' and 'right' keys", 100,
					150);
			g.drawString("Player 2 controls with 'A' and 'D' keys", 100, 300);
			g.drawString("Press keys 'Up' and 'Down' change the over score",
					10, 450);
			g.drawString("press '  ESC '   to  the menu", 150, 600);
		}
		if (screen == 6) {
			setBackground(Color.CYAN);
			g.setFont(new Font("Arial", Font.BOLD, 40));
			g.drawString(winner + "  is the winner,score is  " + s1 + ":" + s2, 100, 300);
			g.drawString("press '  ESC '   to  the menu", 120, 600);

		}
		repaint(); // 重新繪製畫面
	}

	public static void main(String arges[]) {
		Main main = new Main();
		Thread t1 = new Thread(ball); // 把run()餵在這裡 產生Thread的物件Ball
		t1.start(); // 開始執行 t1.run() 等於執行球的開始
		Thread t2 = new Thread(p1);
		t2.start();
		Thread t3 = new Thread(p2);
		t3.start();

		main.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	}

